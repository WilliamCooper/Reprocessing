%% LyX 2.1.3 created this file.  For more info, see http://www.lyx.org/.
\documentclass[12pt]{article}
\usepackage{mathptmx}
\usepackage[T1]{fontenc}
\usepackage[latin9]{inputenc}
\usepackage[letterpaper]{geometry}
\geometry{verbose,tmargin=3.54cm,bmargin=2.54cm,lmargin=2.54cm,rmargin=2.54cm,headheight=1cm,headsep=2cm,footskip=0.5cm}
\usepackage{fancyhdr}
\pagestyle{fancy}
\setcounter{secnumdepth}{2}
\setcounter{tocdepth}{2}
\setlength{\parskip}{\medskipamount}
\setlength{\parindent}{0pt}
\usepackage{color}

\makeatletter

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% LyX specific LaTeX commands.
%% Because html converters don't know tabularnewline
\providecommand{\tabularnewline}{\\}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% User specified LaTeX commands.
\definecolor{fgcolor}{rgb}{0.345, 0.345, 0.345}\definecolor{messagecolor}{rgb}{0, 0, 0}\definecolor{warningcolor}{rgb}{1, 0, 1}\definecolor{errorcolor}{rgb}{1, 0, 0}\input colordvi
\fancyhead{}
\fancyfoot[CE,CO]{}
\newtoks{\addressee} \global\addressee={}
\newdimen\longindent \longindent=3.5truein
\fancyhead[L]{Memo to: \the\addressee \\ \datetoday \\ Page \thepage \hfill}
\renewcommand{\headrulewidth}{0.0pt}
\newenvironment{lyxlist}[1]{\begin{list}{}
{\settowidth{\labelwidth}{#1}
\setlength{\leftmargin}{\labelwidth}
\addtolength{\leftmargin}{\labelsep}
\renewcommand{\makelabel}[1]{##1\hfil}}}{\end{list}}
\newcommand{\datetoday}{\number\day\space
     \ifcase\month\or January\or February\or March\or April\or May\or
     June\or July\or August\or September\or October\or November\or
     December\fi
     \space\number\year}
\newcommand{\EOLmemo}{\null \vskip-1.5truein
{\raggedright \textsf{\textsc{\large \textcolor{blue}{Earth Observing Laboratory}}}}\par
{\raggedright \textsf{\textsl{\textcolor{blue}{Memorandum:}}}} \par \vskip6pt
{\color{blue}{\hrule}}\par
\vskip0.3truein \leftline{\hskip \longindent \datetoday} \vskip0.2truein
\thispagestyle{empty}}
\newcommand{\attachm}[1]{\begin{lyxlist}{Attachments:00}
\item [Attachments:] {#1}
\end{lyxlist}}
\newcommand{\cc}[1]{\begin{lyxlist}{Attachments:00}
\item [cc:] {#1}
\end{lyxlist}}
\newcommand{\attach}[1]{\begin{lyxlist}{Attachments:00}
\item [Attachment:] {#1}
\end{lyxlist}}
%usage: \encl{A\\B\\C} or \cc{ma,e1\\name2\\name3}


\IfFileExists{upquote.sty}{\usepackage{upquote}}{}

\makeatother

\begin{document}
\EOLmemo

\global\addressee={HIPPO reprocessing file} % >>change "File" to the "To:" name desired

\begin{tabular}{ll}
\textsf{\textsc{\textcolor{blue}{To:}}}  & \the\addressee\tabularnewline
\textsf{\textsc{\textcolor{blue}{From:}}}  & Al Cooper\tabularnewline
\textsf{\textsc{\textcolor{blue}{Subject:}}}  & vertical wind for HIPPO-5\tabularnewline
\end{tabular}

\bigskip{}


<<initialization,echo=FALSE,include=FALSE>>=

require(knitr)
opts_chunk$set(echo=FALSE, include=FALSE, fig.lp="fig:")
opts_chunk$set(fig.width=6, fig.height=5, fig.pos="center", digits=4)
options(digits=3)
thisFileName <- "WI-HIPPO5"
require(Ranadu, quietly = TRUE, warn.conflicts=FALSE)
require(ggplot2)
require(grid)
require(ggthemes)
require(vioplot)
require(plyr)
Directory <- DataDirectory ()
Flight <- "rf01" 			
Project = "HIPPO-5"			 
ProjectDir <- "HIPPO"
fname = sprintf("%s%s/%s%s.nc", Directory,ProjectDir,Project,Flight)
VarList <- c("ADIFR", "VSPD", "VSPD_G", "PITCH", "PITCH_IRS2", "QCF", "PSF", "AKRD", "WIC", "TASF", "GGALT", "ROLL", "PSXC", "ATX")
## add variables needed to recalculate wind
VarList <- c(VarList, "TASX", "ATTACK", "SSLIP", "GGVEW", "GGVNS", "VEW", "VNS", "THDG")
## add variables needed for pitch correction:
VarList <- c(VarList, "LAT")
# Data <- getNetCDF (fname, VarList)		#XXX set variables needed here
SaveRData <- sprintf("%s.Rdata", thisFileName)

hline <- function(y, col='black', lwd=1, lty=2) {
  ## note: 'Data' is a 'free variable' and needs to exist in the calling environment 
  SE <- getStartEnd(Data$Time)
#   lines (c(Data$Time[getIndex(Data$Time, SE[1])], 
#            Data$Time[getIndex (Data$Time, SE[2])]), 
#          c(y, y), col=col, lty=2, lwd=lwd)
  abline(h=y, col = col, lwd = lwd, lty = lty)
}

formatTime <- function (time) {
  t <- as.POSIXlt (time)
  tt <- sprintf ("%d:%02d:%02d", t$hour, t$min, t$sec)
  return (tt)
}

testPlot <- function (k) {
  return(k %in% nplots || nplots == 0)
}

SmoothInterp <- function (x) {
  ## skip if there are fewer than 100 measurements
  if (length (x[!is.na(x)]) < 100) {return (x)}
  d <- zoo::na.approx (as.vector(x), maxgap=100, na.rm = FALSE)
  d[is.na(d)] <- 0
  return (signal::filter(signal::sgolay(3, 61), d))
}

@

<<get-data, include=FALSE>>=

## compile a composite data.frame 
Flights <- c("rf01", "rf02", "rf03", "rf04", "rf05", "rf06", "rf07", "rf08", "rf09", "rf10", "rf11", "rf12", "rf13")
ReloadData <- FALSE
# ReloadData <- TRUE
Data <- data.frame()
if (ReloadData) {
  for (flt in Flights) {
    fname = sprintf("%s%s/%s%s.nc", DataDirectory(),ProjectDir,Project,flt)
    fno <- 30
    if (grepl("rf", flt)) {
      fno <- as.integer (sub("rf", "", flt))
    }
    if (grepl ("tf02", flt)) {fno <- -2}
    if (grepl ("ff01", flt)) {fno <- -1}
    D <- getNetCDF (fname, VarList, F=fno)
    .ggalt <- zoo::na.approx (as.vector(D$GGALT), maxgap=2000, na.rm = FALSE)
    # try 7-pt derivative, 3rd order:
    D$GGVS <- signal::sgolayfilt (.ggalt, 3, 7, m=1)  # m=1 for first deriv.
    # if (fno == 1) {D <- D[setRange (D$Time, 174000, 221000), ]}
    # if (fno == 2) {D <- D[setRange (D$Time, 151000, 210000), ]}
    if (fno == 1) {D <- D[setRange (D$Time, 0, 190000), ]}
    # D$PITCH <- D$PITCH - CorrectPitch(D)
    Data <- rbind (Data, D)
  }
  save(Data, file=SaveRData)
} else {
  load(SaveRData)
}
Data$VSPD_G <- (Data$VSPD_G + 0.06)/1.02  ## removes erroneous cal coefficients
## SPECIAL ##
# best: Data$VSPD_G <- Data$VSPD_G * 0.98  ## residual from 0.152 to 0.148
# this doesn't help, either sign: Data$VSPD_G <- Data$VSPD_G + 0.05
# D3 <- Data[Data$RF == 3, ]
# D5 <- Data[Data$RF == 5, ]
# D3 <- D3[!is.na(D3$Time), ]
# SkipRange3 <- c(setRange(D3$Time, 221500, 224500),setRange(D3$Time, 234500, 235900),
#                setRange(D3$Time, 245000, 251000), setRange(D3$Time, 280000, 0))
# SkipRange3 <- SkipRange3 + which(Data$Time[Data$RF == 3][1] == Data$Time)
# D5 <- D5[!is.na(D5$Time), ]
# SkipRange5 <- setRange(D5$Time, 0, 213000)
# SkipRange5 <- SkipRange5 + which(Data$Time[Data$RF == 5][1] == Data$Time)
# Data[c(SkipRange3, SkipRange5), ] <- NA
# Data <- Data[Data$RF == 10, ]  ## restrict to one flight
# D6 <- Data[Data$RF == 6, ]
# D6 <- D6[!is.na(D6$Time), ]
# SkipRange6 <- setRange(D6$Time, 230900, 233300)
# j1 <- which(D6$Time[SkipRange6[1]] == Data$Time)
# j2 <- which(D6$Time[SkipRange6[length(SkipRange6)]] == Data$Time)
# Data[j1:j2, ] <- NA
## eliminate times after 230000 from rf12:
# D12 <- Data[Data$RF == 12, ]
# D12 <- D12[!is.na(D12$Time), ]
# SkipRange <- setRange(D12$Time, 230000, 0)
# j1 <- which(D12$Time[SkipRange[1]] == Data$Time)
# j2 <- which(D12$Time[SkipRange[length(SkipRange)]] == Data$Time)
# Data[j1:j2, ] <- NA
# ## also eliminate few suspicious times (45640--45650) from rf04:
# D4 <- Data[Data$RF == 4, ]
# D4 <- D4[!is.na(D4$Time), ]
# SkipRange <- setRange(D4$Time, 45640,45650)
# j1 <- which(D4$Time[SkipRange[1]] == Data$Time)
# j2 <- which(D4$Time[SkipRange[length(SkipRange)]] == Data$Time)
# Data[j1:j2, ] <- NA
D2 <- Data[Data$RF == 2, ]
D2 <- D2[!is.na(D2$Time), ]
SkipRange <- setRange(D2$Time, 210000, 0)
j1 <- which(D2$Time[SkipRange[1]] == Data$Time)
j2 <- which(D2$Time[SkipRange[length(SkipRange)]] == Data$Time)
Data[j1:j2, ] <- NA



FCap1 <- "Vertical wind, HIPPO-5 flight 3. The blue trace is WIC; the red trace (WICS) is the same measurement after application of 60-s smoothing."
# , "Residual error as defined in (1) as a function of Mach number. The dashed orange line is the mean value, 4.378.")

@


\section{Summary}

As in other HIPPO circuits, there is often a significant offset in vertical wind in HIPPO-5 and much variability, esp.~correlated with climbs and descents.  For example, for HIPPO-5 flight
3, Fig.~\ref{fig:vw-rf3} shows the measurements of vertical wind.
The blue line shows 1-Hz measurements, and the red line is the result
after 60-s smoothing. The offset is significant and varies during
the flight. Other flights show similar problems but with some inconsistency,
often showing pronounced correlation between rate-of-climb and WIC.

The problems are the same as in HIPPO-2, so the same solution applies:

\begin{enumerate}
\item Replace dependence of WIC on VSPD with dependence on VSPD\_G.
\item Remove calibration coefficients that are applied to VSPD\_G.
\item Use new sensitivity coefficients.
\item Eliminate variable WI, conventionally based on VSPD.
\end{enumerate}

This does not work as well in HIPPO-5 as in HIPPO-2 or HIPPO-3, and
it appears that there is some inconsistency in measurements or errors in
either ADIFR or PITCH. PITCH was checked by applying the pitch-correction
algorithm discussed in the wind uncertainty technical note, without improvement.
Detailed looks at ADIFR make it look suspicious. For example, flight 3 has a
large deviation for the level flight segment in the middle of this flight but
reasonable new measurements of WIX near the level segments at the start and
end of the flight, although all were flown at upper levels and similar flight speeds.
ADIFR is significantly different in the middle flight segment and appears to account for
the offset in vertical wind. There are other flights that look much better, but many
with this problem.

I haven't found a solution to this problem. One approach might be to use a filter to
remove any long-duration offset. The results of applying a high-pass Butterworth filter
with 600 s time constant are shown in the appended flight-by-flight plots, and this may
be necessary to get better-looking winds for HIPPO-5.
The remainder of this memo discusses the sensitivity coefficients.


\section{The standard fit (as for HIPPO-2)}

The first step here will be to re-fit the measurements to the standard
formula used to represent angle of attack $\alpha$, from the Processing
Algorithms technical note:

\begin{equation}
\alpha=c_{0}+\frac{\Delta p_{\alpha}}{q}(c_{1}+c_{2}M)\label{eq:stdAOA}
\end{equation}
where $\Delta p_{\alpha}$ is the pressure difference between upward
and downward ports on the radome (ADIFR), $q$ is dynamic pressure
(QCF), and $M$ is the Mach number calculated using the uncorrected
static and dynamic pressure (PSF and QCF). The three coefficients
specified in that document are $\{c\}=\{4.605,$18.44, 6.75\} and
these are the coefficients used in the initial processing.

The approach used here is described in detail in the Wind Uncertainty
technical note. It is to use a reference value for angle of attack,
$\alpha^{*}$, defined by

\begin{equation}
\alpha^{*}=\theta-\frac{w_{p}}{V}\label{eq:alpha-star}
\end{equation}
which would equal the angle of attack if the vertical wind were zero,
and then determine the coefficients in (\ref{eq:stdAOA}) that minimize
the difference between $\alpha^{*}$ and $\alpha$.

For HIPPO-5 and all projects before SPRITES-II, there is the problem
that the highest-quality measurement of the rate of climb of the aircraft,
GGVSPD, was not available. The alternatives are VSPD and VSPD\_G,
the latter from the avionics-system GPS. The former is updated using
the pressure altitude as reference, which can introduce long-distance
biases, especially in cases like HIPPO where the flights do not return
to the same airport. Such flights may extend through atmospheric regions
with important baroclinity or significant departures from the standard
atmosphere, so there can be an important gradient in geometric altitude
for flight along a surface of constant pressure and hence a false
update applied to the vertical motion of the aircraft. See the Algorithm
Documentation memo UsingVSPDforWI.pdf for a discussion of this problem. For 
this reason, VSPD\_G will be used here to represent the rate-of-climb of the
aircraft.


<<vw-rf3, include=TRUE, fig.cap=FCap1>>=

# Data$PITCH <- Data$PITCH - CorrectPitch(Data)
Data$AOAREF <- (Data$PITCH - (Data$VSPD_G / Data$TASF) * (180 / pi)) 
# Data$AOAREF <- (Data$PITCH - (Data$GGVS / Data$TASF) * (180 / pi)) 
# Data <- Data[(Data$AOAREF > 1) & (Data$AOAREF < 6), ]
# - Data$ADIFR / Data$QCF * 21.22 
# Data$AOAREF <- SmoothInterp (Data$AOAREF)
Data$WICS <- SmoothInterp (Data$WIC)
V <- c("Time", "WIC", "WICS")
D3 <- Data[Data$RF == 3, ]
plotWAC(D3[, V], col=c('blue', 'red'), legend.position='top')
Data$M <- MachNumber (Data$PSF, Data$QCF)
# plot (Data$M, Data$AOAREF-14.859*Data$ADIFR / Data$QCF, pch=20, col='blue', xlab='Mach Number', ylab='Residual Error [deg.]')
# lines (c(0,1), c(4.378,4.378), lwd=3, lty=2, col='darkorange')

@


\section{Data used}

The study described in this memo used combined measurements from rf01--rf11 and tf01--tf02. Two restrictions were applied: TASX > 130 and absolute value of ROLL < 4. In
addition, it was necessary to eliminate 23:09:00--23:33:00 from flight 6 because of
apparent blockage affecting ADIFR. In addition, flight 7 was excluded because it seemed inconsistent with other
flights, needed different optimum coefficients, and if included had a large residual standard deviation from the fit,
so it seemed preferable to avoid the danger of distorting the other flights by its inclusion. The resulting data set included about 250,000 1-s measurements.


\section{New coefficients using the standard formula}

<<fits, include=TRUE>>=

SummarizeFit <- function(ft) {
  print (summary(ft)$call)
  print ("Coefficients:")
  print (summary(ft)$coefficients)
  print (sprintf ("Residual standard deviation: %.3f, dof=%d", summary(ft)$sigma, summary(ft)$df[2]))
  print (sprintf ("R-squared %.3f", summary(ft)$r.squared))
}

Data$QR <- Data$ADIFR / Data$QCF
## add flight-duration variable; fit seems to be improved by its inclusion
# Data$FlightDuration <- Data$ADIFR    ## placeholder
# Data <- Data[!is.na(Data$Time), ]
# for (i in 1:length(Flights)) {
#   FlightDuration <- Data$Time[Data$RF == i] - Data$Time[Data$RF == i][1]
#   j1 <- which(Data$Time[Data$RF == i][1] == Data$Time)
#   j2 <- j1 + length(FlightDuration) - 1
#   Data$FlightDuration[j1:j2] <- FlightDuration
# }

# DataFit <- Data[Data$RF != 7 & Data$RF > 0, ]
# DataFit <- Data[Data$RF == 4 | Data$RF == 7 | Data$RF == 8, ]
# DataFit <- Data[Data$RF == 3, ]
DataV <- Data[Data$TASF > 130, ]
DataV <- DataV[abs(DataV$ROLL) < 4, ]
DataV <- DataV[abs(DataV$VSPD_G) < 1, ]
f <- lm (AOAREF~QR+I(QR*M), data=DataV)
cf <- coef(f)
D3V <- DataV[DataV$RF == 3, ]
f3 <- lm (AOAREF~QR+I(QR*M), data=D3V)
cf3 <- coef(f3)

@

For HIPPO-2, the coefficients found were \{5.151, 15.654, 7.299\}. For HIPPO-5, a 
fit of (\ref{eq:stdAOA}) to the composite data, qualified as in
Sect.~3, led to best-fit coefficients \{$c_{1--3}$\} = \{\Sexpr{cf[1]},
\Sexpr{cf[2]}, \Sexpr{cf[3]}\}. These coefficients are significantly different from those for
HIPPO-2 or HIPPO-3, and the use of the HIPPO-2 or HIPPO-3 fits leads to significantly
larger errors. There is evidently some characteristic of the radome that is different in HIPPO-5 vs
earlier projects, and even after removal of evident outliers the fit represents the reference values with
greater error than those earlier projects. Figure~\ref{fig:summarize-fit} compares the calculated
angle of attack
produced by (1) using these new coefficients to the reference values given
by (\ref{eq:alpha-star}), where the larger scatter in comparison to the earlier projects
is evident.  

<<summarize-fit, include=TRUE, fig.cap="Calculated value of angle of attack vs the reference value used in the fit.">>=

SummarizeFit(f)
SummarizeFit(f3)
      ## new angle-of-attack
Data$AK <- cf[1] + Data$QR * (cf[2] + cf[3] * Data$M)
D3 <- Data[Data$RF == 3, ]
D3$AK <- cf3[1] + D3$QR * (cf3[2] + cf3[3] * D3$M)
Data$AK2 <- 5.151 + Data$QR * (15.654 + 7.299 * Data$M)
# DataFit <- Data
# DataFit[!is.na(Data$AOAREF) & !is.na(Data$AK) & (abs(Data$AOAREF-Data$AK) > 0.5), ] <- NA
# plot (DataFit$AOAREF, DataFit$AK, pch=20, col='blue', xlab='Reference Value [deg.]', ylab='Calculated Value from (1)')
# lines (c(1,6), c(1,6), lwd=3, lty=2, col='darkorange')

@


\section{New values of the vertical wind}

A new value of the vertical wind based on the new coefficients
can be estmated from the previous value (WIC) modified to be WIX=WIC+($\alpha$-AKRD)$\pi$V/180
where $\alpha$ is given by (1), $V$ is the airspeed and $\pi/180$
is needed to convert from degrees to radians. In addition, because
WIC as in the reprocessing files was based on VSPD, it is necessary
to add (VSPD\_G-VSPD) to WIX. Figure~\ref{fig:new-vw} repeats Fig.~1
for flight 3 with the addition of this new measurement of the vertical
wind. The red trace (WIXS, WIX with 60-s smoothing) represents
the new variable, which shows mean values close to zero for most of
the flight and is a significant improvement over WIC. 

For reference, the plots of new vertical wind WIX for each of the
HIPPO-5 research flights are appended to this memo, beginning with
Fig.~\ref{fig:all-flights1}. Flight 7 is particularly bad, and special
fits applied to this flight led to such different coefficients that it
appears likely that something was wrong with the measurements (e.g., a
leak in one of the lines). But generally the measurements of vertical
wind for this project show unusual weakness and a different behavior from that
of other earlier projects.

<<new-vw, include=TRUE, fig.cap="As for Fig.\ 1 but adding the new variable WIX for the vertical wind.">>=

Data$WIX <- Data$WIC + (Data$AK-Data$AKRD)*pi*Data$TASF/180. + (Data$VSPD_G-Data$VSPD) 
Data$WIXS <- SmoothInterp (Data$WIX)
D3$WIX <- D3$WIC + (D3$AK-D3$AKRD)*pi*D3$TASF/180. + (D3$VSPD_G-D3$VSPD)  
D3$WIXS <- SmoothInterp (D3$WIX)
Data$WIXF <- Data$WIX - ButterworthFilter (Data$WIX, 600)
Data$WIXFS <- SmoothInterp (Data$WIXF)
D3$WIXF <- D3$WIX - ButterworthFilter (D3$WIX, 600)
# Data$GGVSPD <- Data$VSPD_G   ## needed by WindProcessor; GGVSPD not available
# DataW <- Data
# DataW <- WindProcessor(DataW) ## WIN is now based on old coefficients
# Data$WICN <- DataW$WIN
# DataW <- Data
# DataW$ATTACK <- DataW$AKRD <- DataW$AK       ## replace by new-cal-coef value
# DataW$PITCH <- DataW$PITCH_IRS2
# DataW <- WindProcessor(DataW)  ## will then have both WICN and WIN
# Data$WIN <- DataW$WIN
# Data$WICNS <- SmoothInterp (Data$WICN)
# Data$WINS  <- SmoothInterp (Data$WIN)
# V <- c("Time", "WICS", "WIN", "WINS")
V <- c("Time", "WICS", "WIX", "WIXS", "WIXF")
D3T <- Data[Data$RF == 3, ]
plotWAC(D3T[, V], col=c('blue', 'darkgreen', 'red', 'cyan'), lwd=c(1,2,3,2),legend.position='topright')


<<WIXvsGGALT, include=TRUE, eval=TRUE, fig.cap="WIX vs GGALT for all measurements from the eleven research flights and one test flight used for this study.">>=

# D1 <- Data[Data$RF == 1,]
# D1 <- D1[abs(D1$VSPD_G) < 3, ]
# D2 <- Data[Data$RF == 2,]
# D2 <- D2[abs(D2$VSPD_G) < 3, ]
# plot(Data$GGALT, Data$WIX, pch=20, col='blue', xlim=c(0,15000))
# lines(c(0,15000),c(0,0), lwd=3, lty=2, col='darkorange')

@


\section{Recommendation}

Change the WIC dependency to VSPD\_G, remove the erroneous calibration
coefficients applied to VSPD\_G, and use the sensitivity coefficients
\{\Sexpr{cf[1]}, \Sexpr{cf[2]}, \Sexpr{cf[3]}\} for HIPPO-5.

\clearpage

\begin{center}
\textsf{\textcolor{blue}{-- End of Memo --}} 
\par\end{center}

Reproducibility:

\begin{tabular}{ll}
\textsf{\textsc{\textcolor{blue}{Project:}}}  & WI-HIPPO5\tabularnewline
\textsf{\textsc{\textcolor{blue}{Archive package:}}}  & WI-HIPPO5.zip\tabularnewline
\textsf{\textsc{\textcolor{blue}{Contains:}}}  & attachment list below\tabularnewline
\textsf{\textsc{\textcolor{blue}{Program:}}}  & AKRDforHIPPO5.Rnw\tabularnewline
\textsf{\textsc{\textcolor{blue}{Original Data:}}}  & /scr/raf\_data/HIPPO/HIPPO-5rf01.nc, etc \tabularnewline
\textsf{\textsc{\textcolor{blue}{Data Archive:}}}  & NCAR HPSS (not github) \tabularnewline
\textsf{\textsc{\textcolor{blue}{Git:}}}  & https://github.com/WilliamCooper/Reprocessing.git\tabularnewline
\end{tabular}

\attachm{AKRDforHIPPO5.Rnw\\
AKRDforHIPPO5.pdf\\
SessionInfo} %\cc{first attachment\\second\\3rd att}%\attach{attachment}%\attachm{first\\second} %\cc{first attachment\\second\\3rd att}

<<all-flights, include=TRUE, fig.cap="Recalculated vertical wind WIX and, with 60-s smoothing, WIXS.">>=

for (i in 1:length(Flights)){
  plotWAC(Data[Data$RF == i, c("Time", "WIXS", "WIXFS")])
  # lineWAC(Data$Time, Data$VSPD_G/10, col='green', lwd=0.7, lty=1)
  title(sprintf("Flight %d mean w = %.2f", i, mean(Data[Data$RF == i, "WIX"], na.rm=TRUE)))
}

@

%\attach{attachment}

<<save-system-info, echo=FALSE>>= 
cat (toLatex(sessionInfo()), file="SessionInfo")

@ 
<<make-zip-archive, echo=TRUE, INCLUDE=TRUE>>=
system (sprintf("zip %s.zip AKRDforHIPPO5.Rnw AKRDforHIPPO5.pdf SessionInfo", thisFileName))

@ 



%\attachm{ProgramFile\\Document.pdf\\SaveRData}

%\cc{first attachment\\second\\3rd att}
\end{document}
