#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\input colordvi
\usepackage{color}
\fancyhead{}
\fancyfoot[CE,CO]{}
\newtoks{\addressee} \global\addressee={}
\newdimen\longindent \longindent=3.5truein
\fancyhead[L]{Memo to: \the\addressee \\ \datetoday \\ Page \thepage \hfill}
\renewcommand{\headrulewidth}{0.0pt}
\newenvironment{lyxlist}[1]
{\begin{list}{}
{\settowidth{\labelwidth}{#1}
\setlength{\leftmargin}{\labelwidth}
\addtolength{\leftmargin}{\labelsep}
\renewcommand{\makelabel}[1]{##1\hfil}}}
{\end{list}}
\newcommand{\datetoday}{\number\day\space
     \ifcase\month\or January\or February\or March\or April\or May\or
     June\or July\or August\or September\or October\or November\or
     December\fi
     \space\number\year}
\newcommand{\EOLmemo}{\null \vskip-1.5truein
{\raggedright \textsf{\textsc{\large \textcolor{blue}{Earth Observing Laboratory}}}}\par
{\raggedright \textsf{\textsl{\textcolor{blue}{Memorandum:}}}} \par \vskip6pt
{\color{blue}{\hrule}}\par
\vskip0.3truein \leftline{\hskip \longindent \datetoday} \vskip0.2truein
\thispagestyle{empty}}
\newcommand{\attachm}[1]{\begin{lyxlist}{Attachments:00}
\item [Attachments:] {#1}
\end{lyxlist}}
\newcommand{\cc}[1]{\begin{lyxlist}{Attachments:00}
\item [cc:] {#1}
\end{lyxlist}}
\newcommand{\attach}[1]{\begin{lyxlist}{Attachments:00}
\item [Attachment:] {#1}
\end{lyxlist}}
%usage: \encl{A\\B\\C} or \cc{ma,e1\\name2\\name3}
\end_preamble
\use_default_options false
\begin_modules
knitr
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding default
\fontencoding global
\font_roman "times" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 12
\spacing single
\use_hyperref false
\papersize letterpaper
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 0
\use_package mathdots 0
\use_package mathtools 1
\use_package mhchem 0
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2.54cm
\topmargin 3.54cm
\rightmargin 2.54cm
\bottommargin 2.54cm
\headheight 1cm
\headsep 2cm
\footskip 0.5cm
\secnumdepth 2
\tocdepth 2
\paragraph_separation skip
\defskip medskip
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle fancy
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
EOLmemo 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
global
\backslash
addressee={OTREC processing and QA}  % >>change "File" to the "To:" name
 desired
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0pt">
<column alignment="left" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family sans
\shape smallcaps
\color blue
To:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
the
\backslash
addressee
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family sans
\shape smallcaps
\color blue
From:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Al Cooper
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family sans
\shape smallcaps
\color blue
Subject:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
AKRD and WIC for OTREC
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
bigskip
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<initialization,echo=FALSE,include=FALSE>>=
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

library(knitr)
\end_layout

\begin_layout Plain Layout

opts_chunk$set(echo=FALSE, include=FALSE, fig.lp="fig:")
\end_layout

\begin_layout Plain Layout

opts_chunk$set(fig.width=6, fig.height=5, fig.align="center", digits=4)
\end_layout

\begin_layout Plain Layout

thisFileName <- "AKRDforOTREC"
\end_layout

\begin_layout Plain Layout

require(Ranadu, quietly = TRUE, warn.conflicts=FALSE)
\end_layout

\begin_layout Plain Layout

require(ggplot2)
\end_layout

\begin_layout Plain Layout

require(grid)
\end_layout

\begin_layout Plain Layout

require(ggthemes)
\end_layout

\begin_layout Plain Layout

require(tidyverse)
\end_layout

\begin_layout Plain Layout

require(magrittr)
\end_layout

\begin_layout Plain Layout

Directory <- DataDirectory ()
\end_layout

\begin_layout Plain Layout

Flight <- "tf01" 				# XXX change this
\end_layout

\begin_layout Plain Layout

Project <- "OTREC"			 # XXX change this
\end_layout

\begin_layout Plain Layout

ProjectDir <- Project
\end_layout

\begin_layout Plain Layout

fname <- file.path(Directory, ProjectDir, '/', Project, Flight, '.nc', fsep='')
\end_layout

\begin_layout Plain Layout

Vars <- c(
\begin_inset Quotes eld
\end_inset

AKRD
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

QCF
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

PSF
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

VNS
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

VEW
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

ADIFR
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

SSLIP
\begin_inset Quotes erd
\end_inset

,
\end_layout

\begin_layout Plain Layout

                     
\begin_inset Quotes eld
\end_inset

GGVNS
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

GGVEW
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

GGALT
\begin_inset Quotes erd
\end_inset

,
\end_layout

\begin_layout Plain Layout

                     
\begin_inset Quotes eld
\end_inset

ROLL
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

PITCH
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

GGVSPD
\begin_inset Quotes erd
\end_inset

, 'THDG')
\end_layout

\begin_layout Plain Layout

Data <- getNetCDF (fname, 
\end_layout

\begin_layout Plain Layout

                  standardVariables(Vars))
\end_layout

\begin_layout Plain Layout

SaveRData <- sprintf("%s.Rdata", thisFileName)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Section*
The Problem With AKRD/WIC
\end_layout

\begin_layout Standard
The characteristics of the radome have clearly changed prior to OTREC, perhaps
 because of modifications to the pressure ports to remove rough edges and
 features that might affect the flow.
 The mean vertical wind (WIC) in OTRECtf01.nc and OTREC-TESTtf01.nc was below
 
\begin_inset Formula $-2$
\end_inset


\begin_inset space ~
\end_inset

m/s for both flights.
 In both bases, the offset was apparent between AKRD and AOAREF, the fit
 variable calculated on the assumption that the vertical wind is zero.
 The problem is illustrated by Fig.
\begin_inset space ~
\end_inset

1, which shows AKRD, the expected angle-of-attack for zero vertical wind
 (AOAREF), and the vertical wind for test flight #1.
 There is a significant offset between mean values of AKRD and AOAREF (about
 0.87
\begin_inset Formula $^{\circ}$
\end_inset

), which is not normal and is reflected in the large offset in the vertical
 wind.
 This indicates that a new representation of AKRD needs to be found for
 the new radome.
\end_layout

\begin_layout Standard
Perhaps this is in opportunity to explore a new approach to finding AKRD\SpecialChar endofsentence

 This note outlines some ideas that seem worth exploring for OTREC.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<AKRDplot, include=TRUE, fig.cap='(top) Angle-of-attack (AKRD, blue line)
 and the reference variable AOAREF (green line) for OTREC tf01.
 The flight included a ground stop and several approaches / landings, so
 the time range is restricted to only part of the flight.'>>=
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

# source('~/RStudio/Ranadu/R/blankNA.R')  # not needed if Ranadu updated
 to Aug-2 version
\end_layout

\begin_layout Plain Layout

layout(matrix(1:2, ncol=1), widths=c(8,8), heights=c(5.5,8))  
\end_layout

\begin_layout Plain Layout

op <- par (mar=c(2,4,1,1)+0.1, oma=c(1.1,0,0,0)) 
\end_layout

\begin_layout Plain Layout

Data$AOAREF <- Data$PITCH - Data$GGVSPD * 180 / (Data$TASX * pi)
\end_layout

\begin_layout Plain Layout

blankNA(Data, Data$TASX < 105, c('AKRD', 'AOAREF')) %>% 
\end_layout

\begin_layout Plain Layout

  select(Time, AKRD, AOAREF)  %>% 
\end_layout

\begin_layout Plain Layout

  selectTime(160000, 190000) %>% 
\end_layout

\begin_layout Plain Layout

  plotWAC(legend.position='top')
\end_layout

\begin_layout Plain Layout

op <- par (mar=c(5,4,1,1)+0.1) 
\end_layout

\begin_layout Plain Layout

blankNA(Data, Data$TASX < 105, 'WIC') %>% 
\end_layout

\begin_layout Plain Layout

  select(Time, WIC) %>% 
\end_layout

\begin_layout Plain Layout

  selectTime(160000, 190000) %>% 
\end_layout

\begin_layout Plain Layout

  plotWAC()
\end_layout

\begin_layout Plain Layout

layout(matrix(1))
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Section*
A Revised Approach
\end_layout

\begin_layout Standard
The standard approaches to determining new sensitivity coefficients for
 angle-of-attack can be repeated once appropriate flight conditions, esp.
\begin_inset space ~
\end_inset

speed runs, are included in the OTREC test flights.
 However, some new steps seem worth exploring:
\end_layout

\begin_layout Enumerate
First, obtain the best estimate of the pitch angle using either the Ranadu::Corr
ectPitch() function or the Kalman filter.
 Usually the change will not be significant, but that should be checked
 so that the optimal values of pitch can be used in the following analysis.
 Pitch is a very important measurement for this study because the difference
 between pitch and angle of attack determines the magnitude of the vertical
 component of the relative wind, as the next equation shows.
\end_layout

\begin_layout Enumerate
The complementary representation in terms of slowly varying and rapidly
 varying components should be used because it separates the sensitivity
 to fluctuations from the need to represent the slowly varying components,
 as discussed in previous memos.
 The equations used are:
\begin_inset Newline newline
\end_inset


\begin_inset Formula 
\begin{equation}
\alpha_{f}=\left(\frac{\mathrm{\{ADIFR\}}}{\mathrm{\{QCF\}}}\right)_{f}(c_{1}+c_{2}M)\label{eq:alpha-fast}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
\alpha_{s}=d_{0}+d_{1}\left(\frac{\mathrm{\{ADIFR\}}}{\mathrm{\{QCF\}}}\right)_{s}+d_{2}\mathrm{\{QCF\}}_{s}\label{eq:alpha-slow}
\end{equation}

\end_inset

where the 
\begin_inset Formula $f$
\end_inset

 and 
\begin_inset Formula $s$
\end_inset

 subscripts represent the high-pass and low-pass components after filtering.
 More complicated representations were tested in both cases, but these appear
 to provide adequate fits without additional terms.
 The 
\begin_inset Formula $c_{2}$
\end_inset

 term representing Mach-number dependence does not appear to be necessary,
 but the expectation that there will be some dependence on 
\begin_inset Formula $M$
\end_inset

 justified its tentative inclusion.
 However, the fits below show no significant difference with 
\begin_inset Formula $c_{2}=0$
\end_inset

, and an analysis of variance made its inclusion appear questionable, so
 it has been dropped from the calculations presented here.
\end_layout

\begin_layout Enumerate
The simplified formula for the vertical wind 
\begin_inset Formula $w$
\end_inset

 is:
\begin_inset Newline newline
\end_inset


\begin_inset Formula 
\begin{equation}
w=V(\alpha-\phi)+w_{p}\label{eq:basicEq}
\end{equation}

\end_inset

where 
\begin_inset Formula $V$
\end_inset

 is the airspeed, 
\begin_inset Formula $\alpha$
\end_inset

 the angle of attack, 
\begin_inset Formula $\phi$
\end_inset

 the pitch angle, and 
\begin_inset Formula $w_{p}$
\end_inset

 the rate-of-climb of the aircraft.
 The conventional approach has been to assume that the vertical wind is
 zero, for example during a speed run, and then fit to 
\begin_inset Formula $\alpha^{*}=\phi-w_{p}/V$
\end_inset

\SpecialChar endofsentence
 There will be errors in this representation whenever the vertical wind
 is not zero, because the correct representation of 
\begin_inset Formula $\alpha$
\end_inset

 is 
\begin_inset Formula $\alpha=\phi+(w-w_{p})/V$
\end_inset

, but it has been assumed that averaging over flight periods should give
 average vertical wind near zero.
 An improved approach to finding an empirical representation of 
\begin_inset Formula $\alpha$
\end_inset

 in terms of other measurements 
\begin_inset Formula $\{m_{i}\}$
\end_inset

 like ADIFR might be as follows:
\end_layout

\begin_deeper
\begin_layout Enumerate
High-pass filter as in the complementary-filter representation, where it
 is reasonable to expect 
\begin_inset Formula $w_{f}=0$
\end_inset

 so this can be used to find 
\begin_inset Formula $\alpha(\{m_{i}\}){}_{f}$
\end_inset

 in the conventional way.
 The problem then is to find the slowly varying component 
\begin_inset Formula $\alpha{}_{s}=\alpha-\alpha{}_{f}$
\end_inset

.
\end_layout

\begin_layout Enumerate
Find a first estimate of the slow component in the usual way, assuming 
\begin_inset Formula $w$
\end_inset

 is zero.
\end_layout

\begin_layout Enumerate
Use the fit to calculate 
\begin_inset Formula $w$
\end_inset

.
\end_layout

\begin_layout Enumerate
Repeat using the expanded representation, with low-pass-filtered components,
 for which no change is expected but the fit RMS should decrease significantly:
\begin_inset Newline newline
\end_inset


\begin_inset Formula 
\begin{equation}
\alpha_{s}^{*}=(\phi+(w-w_{p})/V)_{s}\label{eq:aoastar}
\end{equation}

\end_inset


\end_layout

\begin_layout Enumerate
Iterate? This should not be necessary but might be useful once.
 Eq.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:aoastar"
plural "false"
caps "false"
noprefix "false"

\end_inset

 is not satisfied exactly in the procedure used because 
\begin_inset Formula $w$
\end_inset

 is calculated without simplification, including roll and pitch angles as
 well as rotational corrections, but the agreement should be very good and
 is worth checking.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Perhaps an alternate statement of the problem is this:
\end_layout

\begin_layout Enumerate
Given 
\begin_inset Formula $\alpha$
\end_inset

, it is possible to calculate 
\begin_inset Formula $w(\alpha)$
\end_inset

.
\end_layout

\begin_layout Enumerate
Eq.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:aoastar"
plural "false"
caps "false"
noprefix "false"

\end_inset

 then becomes:
\begin_inset Newline newline
\end_inset


\begin_inset Formula 
\begin{equation}
\phi-\alpha+(w(\alpha)-w_{p})/V=0\label{eq:nleqn}
\end{equation}

\end_inset


\end_layout

\begin_layout Enumerate
This is tautalogically satisfied for any empirical representation of 
\begin_inset Formula $\alpha$
\end_inset

, so it doesn't help us find the best empirical representation 
\begin_inset Formula $\alpha({m_{i}})$
\end_inset

 in terms of a set of measured characteristics 
\begin_inset Formula $\{m_{i}\}$
\end_inset

.
\end_layout

\begin_layout Enumerate
High-pass filter: Then expect 
\begin_inset Formula $<w>_{f}=0$
\end_inset

 and use this to find 
\begin_inset Formula $<\alpha\{m_{i}\}>_{f}$
\end_inset

.
 The problem then is to find 
\begin_inset Formula $<\alpha>_{s}=\alpha-<\alpha>_{f}$
\end_inset

.
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
The components affecting the vertical wind, AKRD, PITCH, and GGVSPD, potentially
 have relative offsets in time, so results should be optimized by introducing
 appropriate time shifts.
 (Checks indicate that no significant effect arises from shifts of 
\begin_inset Formula $\pm200$
\end_inset


\begin_inset space ~
\end_inset

hPa or so.)
\end_layout

\begin_layout Enumerate
The angle-of-attack tends to decrease systematically during a flight as
 the aircraft becomes lighter and less lift is required.
 In the slowly varying component, it may be useful to include a time factor,
 although that dependence should be represented via changes in ADIFR unless
 the airflow changes as the weight of the aircraft changes.
 Exploration of this dependence, however, revealed a significant dependence,
 so a new fit variable (called TIA here, 
\begin_inset Quotes eld
\end_inset

Time In Air
\begin_inset Quotes erd
\end_inset

) was introduced.
\end_layout

\begin_layout Standard
The OTREC test flights have maneuvers and are suitable to use for this study.
 This can be extended later to include other data including that from research
 flights.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<SOCRATES, include=FALSE, fig.cap=''>>=
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

Project <- 'SOCRATES'
\end_layout

\begin_layout Plain Layout

# Project <- 'WECAN'
\end_layout

\begin_layout Plain Layout

Project <- 'OTREC'
\end_layout

\begin_layout Plain Layout

TASlimit <- 105  # use 95 for C-130
\end_layout

\begin_layout Plain Layout

# TASlimit <- 95
\end_layout

\begin_layout Plain Layout

needData <- TRUE  # set TRUE if time shifts are used.
\end_layout

\begin_layout Plain Layout

if (needData) {
\end_layout

\begin_layout Plain Layout

  Vars <- c(Vars, 'WOW_A')  # Needed for elapsed-flight-time variable
\end_layout

\begin_layout Plain Layout

  # Vars <- c(Vars, 'PSFD') # needed for C-130
\end_layout

\begin_layout Plain Layout

  D <- getProjectData (Project, standardVariables(Vars), .Test = TRUE)
\end_layout

\begin_layout Plain Layout

  # D$PSF <- D$PSFD  # for C-130 to avoid changes of variable
\end_layout

\begin_layout Plain Layout

  # Introduce time shifts, and vary to optimize the RMS:
\end_layout

\begin_layout Plain Layout

  # (The result was no effect on the RMS, evidently dominated 
\end_layout

\begin_layout Plain Layout

  #  by other effects.)
\end_layout

\begin_layout Plain Layout

  # D$PITCH <- ShiftInTime (D$PITCH, 1, -200)
\end_layout

\begin_layout Plain Layout

  # D$GGVSPD <- ShiftInTime (D$GGVSPD, 1, -200)
\end_layout

\begin_layout Plain Layout

  # D$ADIFR <- ShiftInTime (D$ADIFR, 1, -200)
\end_layout

\begin_layout Plain Layout

  D$QR <- D$ADIFR / D$QCF
\end_layout

\begin_layout Plain Layout

  D$QR[D$QCF < 20] <- NA
\end_layout

\begin_layout Plain Layout

  D$QR[is.infinite(D$QR)] <- NA
\end_layout

\begin_layout Plain Layout

  # Use PITCH here; subsequently, use PITCHC
\end_layout

\begin_layout Plain Layout

  D$AOAREF <- D$PITCH + ((D$WIC - D$GGVSPD) / D$TASX) * (180 / pi) 
\end_layout

\begin_layout Plain Layout

  D$M <- MachNumber (D$PSF, D$QCF)
\end_layout

\begin_layout Plain Layout

  D$WICS <- SmoothInterp (D$WIC)
\end_layout

\begin_layout Plain Layout

  CutoffPeriod <- 600
\end_layout

\begin_layout Plain Layout

  Rate <- 1
\end_layout

\begin_layout Plain Layout

  D$AOAREFS <- zoo::na.approx (as.vector(D$AOAREF), maxgap=1000*Rate, 
\end_layout

\begin_layout Plain Layout

               na.rm = FALSE, rule = 2)
\end_layout

\begin_layout Plain Layout

  D$AOAREFS[is.na(D$AOAREFS)] <- 0
\end_layout

\begin_layout Plain Layout

  D$AOAREFS <- signal::filtfilt (signal::butter (3, 2/CutoffPeriod),  
\end_layout

\begin_layout Plain Layout

               D$AOAREFS)
\end_layout

\begin_layout Plain Layout

  D$AOAREFF <-  D$AOAREF - D$AOAREFS
\end_layout

\begin_layout Plain Layout

  D$QRS <- zoo::na.approx (as.vector(D$QR), maxgap=1000*Rate, 
\end_layout

\begin_layout Plain Layout

           na.rm = FALSE, rule = 2)
\end_layout

\begin_layout Plain Layout

  D$QRS[is.na(D$QRS)] <- 0
\end_layout

\begin_layout Plain Layout

  D$QRS <- signal::filtfilt (signal::butter (3, 2/CutoffPeriod), D$QRS)
\end_layout

\begin_layout Plain Layout

  D$QRF <-  D$QR - D$QRS
\end_layout

\begin_layout Plain Layout

  D$QCFS <- zoo::na.approx (as.vector(D$QCF), maxgap=1000*Rate, 
\end_layout

\begin_layout Plain Layout

            na.rm = FALSE, rule = 2)
\end_layout

\begin_layout Plain Layout

  D$QCFS[is.na(D$QCFS)] <- 0
\end_layout

\begin_layout Plain Layout

  D$QCFS <- signal::filtfilt (signal::butter (3, 2/CutoffPeriod), D$QCFS)
\end_layout

\begin_layout Plain Layout

  D$MS <- zoo::na.approx (as.vector(D$M), maxgap=1000*Rate, 
\end_layout

\begin_layout Plain Layout

          na.rm = FALSE, rule = 2)
\end_layout

\begin_layout Plain Layout

  D$MS[is.na(D$MS)] <- 0
\end_layout

\begin_layout Plain Layout

  D$MS <- signal::filtfilt (signal::butter (3, 2/CutoffPeriod), D$MS)
\end_layout

\begin_layout Plain Layout

  D$MF <-  D$M - D$MS
\end_layout

\begin_layout Plain Layout

  save(D, file = SaveRData)
\end_layout

\begin_layout Plain Layout

} else {
\end_layout

\begin_layout Plain Layout

  load(SaveRData)
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

# The pitch correction needs to be applied to each flight, to avoid
\end_layout

\begin_layout Plain Layout

# problems arising from transitions between flights.
 Also, add a
\end_layout

\begin_layout Plain Layout

# variable that indicates the time from start of the flight.
\end_layout

\begin_layout Plain Layout

D$PITCHC <- D$PITCH
\end_layout

\begin_layout Plain Layout

D$TIA <- seq(1, nrow(D))
\end_layout

\begin_layout Plain Layout

for (f in unique (D$RF)) {
\end_layout

\begin_layout Plain Layout

  r <- (D$RF == f)
\end_layout

\begin_layout Plain Layout

  D$PITCHC[r] <- D$PITCH[r] - CorrectPitch(D[r, ])[, 1]
\end_layout

\begin_layout Plain Layout

  D$TIA[r] <- as.double(D$Time[r] - D$Time[r][which(D$WOW_A[r] == 0)][1])
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

D$AOAREF <- D$PITCHC + ((-D$GGVSPD) / D$TASX) * (180 / pi) # without WIC
\end_layout

\begin_layout Plain Layout

CutoffPeriod <- 600
\end_layout

\begin_layout Plain Layout

Rate <- 1
\end_layout

\begin_layout Plain Layout

D$AOAREFS <- zoo::na.approx (as.vector(D$AOAREF), maxgap=1000*Rate, 
\end_layout

\begin_layout Plain Layout

             na.rm = FALSE, rule = 2)
\end_layout

\begin_layout Plain Layout

D$AOAREFS[is.na(D$AOAREFS)] <- 0
\end_layout

\begin_layout Plain Layout

D$AOAREFS <- signal::filtfilt (signal::butter (3, 2/CutoffPeriod),
\end_layout

\begin_layout Plain Layout

             D$AOAREFS)
\end_layout

\begin_layout Plain Layout

D$AOAREFF <-  D$AOAREF - D$AOAREFS
\end_layout

\begin_layout Plain Layout

# remove questionable regions: (SOCRATES)
\end_layout

\begin_layout Plain Layout

if (Project == 'SOCRATES') {
\end_layout

\begin_layout Plain Layout

  # Regions in flights 8 and 12 were identified by large residual errors
\end_layout

\begin_layout Plain Layout

  DR <- data.frame(RF=3, Start=254500, End=261000)
\end_layout

\begin_layout Plain Layout

  DR <- rbind(DR, data.frame(RF = 4, Start = 274500, End = 281500))
\end_layout

\begin_layout Plain Layout

  DR <- rbind(DR, data.frame(RF = 5, Start = 255000, End = 261500))
\end_layout

\begin_layout Plain Layout

  DR <- rbind(DR, data.frame(RF = 6, Start = 273000, End = 291500))
\end_layout

\begin_layout Plain Layout

  DR <- rbind(DR, data.frame(RF = 8, Start = 302000, End = 305139))
\end_layout

\begin_layout Plain Layout

  DR <- rbind(DR, data.frame(RF = 12, Start = 235513, End = 241000))
\end_layout

\begin_layout Plain Layout

  DR <- rbind(DR, data.frame(RF = 13, Start = 300000, End = 302000))
\end_layout

\begin_layout Plain Layout

  DR <- rbind(DR, data.frame(RF = 14, Start = 291500, End = 303000))
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

if (Project == 'WECAN') {
\end_layout

\begin_layout Plain Layout

  DR <- data.frame(RF=3, Start=203000, End=213000)
\end_layout

\begin_layout Plain Layout

  DR <- rbind(DR, data.frame(RF = 8, Start = 233000, End = 251000))
\end_layout

\begin_layout Plain Layout

  DR <- rbind(DR, data.frame(RF = 10, Start = 183000, End = 244130))
\end_layout

\begin_layout Plain Layout

  DR <- rbind(DR, data.frame(RF = 15, Start = 213000, End = 220500))
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

if (Project == 'OTREC') {  # Exclude missed-approaches on tf01
\end_layout

\begin_layout Plain Layout

  r <- which (D$RF == 51)[1] - 1
\end_layout

\begin_layout Plain Layout

  r <- r + setRange(D[D$RF == 51, ], 185000, 201000)
\end_layout

\begin_layout Plain Layout

  D$WIC[r] <- NA
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

# Make speed-run-and-pitch-maneuver data.frame
\end_layout

\begin_layout Plain Layout

if (Project == 'OTREC') {
\end_layout

\begin_layout Plain Layout

  DR <- data.frame (RF = 51, Start = 0, End = 185417)  # two tf01 SR
\end_layout

\begin_layout Plain Layout

  DR <- rbind (DR, data.frame (RF = 51, Start = 185643, End = 201200))
\end_layout

\begin_layout Plain Layout

  DR <- rbind (DR, data.frame (RF = 51, Start = 201350, End = 0))
\end_layout

\begin_layout Plain Layout

  DR <- rbind (DR, data.frame (RF = 52, Start = 0, End = 153917))
\end_layout

\begin_layout Plain Layout

  DR <- rbind (DR, data.frame (RF = 52, Start = 154811, End = 154827))
\end_layout

\begin_layout Plain Layout

  DR <- rbind (DR, data.frame (RF = 52, Start = 160003, End = 0))
\end_layout

\begin_layout Plain Layout

  DR <- rbind (DR, data.frame (RF = 53, Start = 0, End = 182955))
\end_layout

\begin_layout Plain Layout

  DR <- rbind (DR, data.frame (RF = 53, Start = 183424, End = 185326))
\end_layout

\begin_layout Plain Layout

  DR <- rbind (DR, data.frame (RF = 53, Start = 190647, End = 192946))
\end_layout

\begin_layout Plain Layout

  DR <- rbind (DR, data.frame (RF = 53, Start = 194159, End = 0))
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

# For OTREC, make separate DS for maneuvers
\end_layout

\begin_layout Plain Layout

DS <- D
\end_layout

\begin_layout Plain Layout

for (f in 1:nrow(DR)) {
\end_layout

\begin_layout Plain Layout

  r <- which (D$RF == DR$RF[f])[1] - 1
\end_layout

\begin_layout Plain Layout

  r <- r + setRange(D[D$RF == DR$RF[f], ], DR$Start[f], DR$End[f])
\end_layout

\begin_layout Plain Layout

  DS$WIC[r] <- NA
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

# make preliminary plots of WIC, to screen for bad-data segments
\end_layout

\begin_layout Plain Layout

if (FALSE) {
\end_layout

\begin_layout Plain Layout

  for (f in unique(D$RF)) {
\end_layout

\begin_layout Plain Layout

    D %>% filter(RF == f) %>% select(Time, WIC) %>% plotWAC()
\end_layout

\begin_layout Plain Layout

    title(sprintf ('mean updraft for flight %d is %.1f', f, 
\end_layout

\begin_layout Plain Layout

                    mean(D[D$RF == f, 'WIC'], na.rm=TRUE)))
\end_layout

\begin_layout Plain Layout

  }
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<fits, include=TRUE>>=
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

SummarizeFit <- function(ft) {
\end_layout

\begin_layout Plain Layout

    print (summary(ft)$call)
\end_layout

\begin_layout Plain Layout

    print ("Coefficients:")
\end_layout

\begin_layout Plain Layout

    print (summary(ft)$coefficients)
\end_layout

\begin_layout Plain Layout

    print (sprintf ("Residual standard deviation: %.3f, dof=%d", summary(ft)$sigm
a, summary(ft)$df[2]))
\end_layout

\begin_layout Plain Layout

    print (sprintf ("R-squared %.3f", summary(ft)$r.squared))
\end_layout

\begin_layout Plain Layout

  }
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

r <- !is.na(D$WIC) & (D$TASX > TASlimit) & (abs(D$ROLL) < 2) &
\end_layout

\begin_layout Plain Layout

     (abs(D$GGVSPD) < 5)
\end_layout

\begin_layout Plain Layout

rs <- !is.na(DS$WIC) & (DS$TASX > TASlimit) & (abs(DS$ROLL) < 2) &
\end_layout

\begin_layout Plain Layout

     (abs(DS$GGVSPD) < 5)
\end_layout

\begin_layout Plain Layout

DF <- D[r, ]
\end_layout

\begin_layout Plain Layout

DS <- DS[rs, ]
\end_layout

\begin_layout Plain Layout

f <- lm (AOAREF ~ QR + I(QR * M), data = DF)
\end_layout

\begin_layout Plain Layout

fsr <- lm (AOAREF ~ QR + I(QR * M), data = DS)
\end_layout

\begin_layout Plain Layout

cf <- coef(f)
\end_layout

\begin_layout Plain Layout

ff <- lm (AOAREFF ~ 0 + QRF, data = DF)
\end_layout

\begin_layout Plain Layout

ffsr <- lm (AOAREFF ~ 0 + QRF, data = DS)
\end_layout

\begin_layout Plain Layout

cffn <- coef (ff)
\end_layout

\begin_layout Plain Layout

cffx <- 21.481   ## force DEEPWAVE value? (GV only)
\end_layout

\begin_layout Plain Layout

# Not for OTREC:
\end_layout

\begin_layout Plain Layout

cffx <- coef (ffsr)
\end_layout

\begin_layout Plain Layout

fs <- lm(AOAREFS ~ QRS + QCFS + TIA, data = DF)
\end_layout

\begin_layout Plain Layout

fssr <- lm(AOAREFS ~ QRS + QCFS + TIA, data = DS)
\end_layout

\begin_layout Plain Layout

cfs <- coef(fs)
\end_layout

\begin_layout Plain Layout

# SummarizeFit(f)
\end_layout

\begin_layout Plain Layout

# SummarizeFit(ff)
\end_layout

\begin_layout Plain Layout

SummarizeFit(fs)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<new_wind, include=TRUE, fig.cap='Old and new value for the vertical wind.
 Gaps in WIC indicate where values have been excluded from the fits but
 not from average-WIY.'>>=
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

Data <- D
\end_layout

\begin_layout Plain Layout

Data$AKY <- cffx * Data$QRF + cfs[1] + cfs[2] * Data$QRS + 
\end_layout

\begin_layout Plain Layout

           cfs[3] * Data$QCFS + cfs[4] * Data$TIA
\end_layout

\begin_layout Plain Layout

DataW <- Data
\end_layout

\begin_layout Plain Layout

DataW$ATTACK <- Data$AKY
\end_layout

\begin_layout Plain Layout

DataW <- Ranadu::WindProcessor (DataW)
\end_layout

\begin_layout Plain Layout

Data$WIY <- DataW$WIN
\end_layout

\begin_layout Plain Layout

# Data$WIZ <- Data$WIC + (Data$AK - Data$AKRD) * Data$TASX * pi / 180  ##
 for comparison
\end_layout

\begin_layout Plain Layout

Data$WIYS <- zoo::na.approx (as.vector (Data$WIY), maxgap=1000,
\end_layout

\begin_layout Plain Layout

             na.rm=FALSE, rule = 2)
\end_layout

\begin_layout Plain Layout

Data$WIYS[is.na(Data$WIYS)] <- 0
\end_layout

\begin_layout Plain Layout

Rate <- 1
\end_layout

\begin_layout Plain Layout

CutoffPeriod <- 600 * Rate
\end_layout

\begin_layout Plain Layout

Data$WIYS <- signal::filtfilt (signal::butter (3, 2/CutoffPeriod), Data$WIYS)
\end_layout

\begin_layout Plain Layout

Data$WIF <-  Data$WIY - Data$WIYS
\end_layout

\begin_layout Plain Layout

# for (f in unique(Data$RF)) {
\end_layout

\begin_layout Plain Layout

#   Data %>% dplyr::filter(RF == f) %>% select(Time, WIC, WIY) %>% plotWAC()
\end_layout

\begin_layout Plain Layout

#  title(sprintf ('mean updraft for flight %d is %.1f', f, mean(Data[Data$RF
 == f, 'WIY'], na.rm=TRUE)))
\end_layout

\begin_layout Plain Layout

# }
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

# Now iterate: n times
\end_layout

\begin_layout Plain Layout

n <- 1
\end_layout

\begin_layout Plain Layout

for (i in 1:n) {
\end_layout

\begin_layout Plain Layout

  D$AOAREF <- D$PITCHC + ((Data$WIY - D$GGVSPD) / D$TASX) * (180 / pi)
\end_layout

\begin_layout Plain Layout

  D$AOAREFS <- zoo::na.approx (as.vector(D$AOAREF), maxgap=1000*Rate,
\end_layout

\begin_layout Plain Layout

               na.rm = FALSE, rule = 2)
\end_layout

\begin_layout Plain Layout

  D$AOAREFS[is.na(D$AOAREFS)] <- 0
\end_layout

\begin_layout Plain Layout

  D$AOAREFS <- signal::filtfilt (signal::butter (3, 2/CutoffPeriod),
\end_layout

\begin_layout Plain Layout

               D$AOAREFS)
\end_layout

\begin_layout Plain Layout

  D$AOAREFF <-  D$AOAREF - D$AOAREFS
\end_layout

\begin_layout Plain Layout

  DF <- D[r, ]
\end_layout

\begin_layout Plain Layout

  f <- lm (AOAREF ~ QR + I(QR * M), data = DF)
\end_layout

\begin_layout Plain Layout

  cf <- coef(f)
\end_layout

\begin_layout Plain Layout

  # Don't repeat the 'fast' fit
\end_layout

\begin_layout Plain Layout

  # ff <- lm (AOAREFF ~ 0 + QRF, data = DF)
\end_layout

\begin_layout Plain Layout

  # cffn <- coef (ff)
\end_layout

\begin_layout Plain Layout

  # cff <- 21.481   ## force DEEPWAVE value
\end_layout

\begin_layout Plain Layout

  fs <- lm(AOAREFS ~ QRS + QCFS + TIA, data = DF)
\end_layout

\begin_layout Plain Layout

  # This is just a check using the SOCRATES TIA dependence,
\end_layout

\begin_layout Plain Layout

  # not used here.
 It leads to a worse mean updraft for tf03.
\end_layout

\begin_layout Plain Layout

  fsx <- lm(AOAREFS + 5.0e-6 * TIA ~ QRS + QCFS, data = DF)
\end_layout

\begin_layout Plain Layout

  cfs <- coef(fs)
\end_layout

\begin_layout Plain Layout

  fsn <- lm(AOAREFS ~ QRS + QCFS, data = DF)
\end_layout

\begin_layout Plain Layout

  cfsn <- coef(fsn)
\end_layout

\begin_layout Plain Layout

  # SummarizeFit(f)
\end_layout

\begin_layout Plain Layout

  # SummarizeFit(ff)
\end_layout

\begin_layout Plain Layout

  # SummarizeFit(fs)
\end_layout

\begin_layout Plain Layout

  Data <- D
\end_layout

\begin_layout Plain Layout

  Data$AKY <- cffx * Data$QRF + cfs[1] + cfs[2] * Data$QRS + 
\end_layout

\begin_layout Plain Layout

              cfs[3] * Data$QCFS + cfs[4] * Data$TIA
\end_layout

\begin_layout Plain Layout

  RMS <- with(Data[r, ], sd(AKY - AOAREF, na.rm=TRUE))
\end_layout

\begin_layout Plain Layout

  DataW <- Data
\end_layout

\begin_layout Plain Layout

  DataW$ATTACK <- Data$AKY
\end_layout

\begin_layout Plain Layout

  DataW <- Ranadu::WindProcessor (DataW)
\end_layout

\begin_layout Plain Layout

  Data$WIY <- DataW$WIN
\end_layout

\begin_layout Plain Layout

  # Data$WIZ <- Data$WIC + (Data$AK - Data$AKRD) * Data$TASX * pi / 180
    ## for comparison
\end_layout

\begin_layout Plain Layout

  Data$WIYS <- zoo::na.approx (as.vector (Data$WIY), maxgap=1000,
\end_layout

\begin_layout Plain Layout

               na.rm=FALSE, rule = 2)
\end_layout

\begin_layout Plain Layout

  Data$WIYS[is.na(Data$WIYS)] <- 0
\end_layout

\begin_layout Plain Layout

  Rate <- 1
\end_layout

\begin_layout Plain Layout

  CutoffPeriod <- 600 * Rate
\end_layout

\begin_layout Plain Layout

  Data$WIYS <- signal::filtfilt (signal::butter (3, 2/CutoffPeriod), 
\end_layout

\begin_layout Plain Layout

                                 Data$WIYS)
\end_layout

\begin_layout Plain Layout

  Data$WIF <-  Data$WIY - Data$WIYS
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

for (f in unique(Data$RF)) {
\end_layout

\begin_layout Plain Layout

  Data %>% dplyr::filter(RF == f) %>% select(Time, WIC, WIY) %>% plotWAC()
\end_layout

\begin_layout Plain Layout

  abline(h = 0, lty = 2, col = 'red')
\end_layout

\begin_layout Plain Layout

 title(sprintf ('mean updraft for flight %d is %.2f (WIC: %.2f)', 
\end_layout

\begin_layout Plain Layout

               f, mean(Data[Data$RF == f, 'WIY'], na.rm=TRUE),
\end_layout

\begin_layout Plain Layout

               mean(Data[Data$RF == f, 'WIC'], na.rm=TRUE)))
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Section*
Results
\end_layout

\begin_layout Standard
One iteration was used to find the coefficients needed to represent angle-of-att
ack.
 First, 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:aoastar"
plural "false"
caps "false"
noprefix "false"

\end_inset

 was used with WIC as in the original processing used for 
\begin_inset Formula $w$
\end_inset

.
 (That processing was consistent with the standard coefficients given in
 
\begin_inset Quotes eld
\end_inset

ProcessingAlgorithms.pdf
\begin_inset Quotes erd
\end_inset

.) The coefficients found from fits to that representation of angle-of-attack
 were used to calculate a new angle of attack and new value of the vertical
 wind, and then that value of vertical wind was used in 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:aoastar"
plural "false"
caps "false"
noprefix "false"

\end_inset

 to revise the reference value and the processs was repeated.
\end_layout

\begin_layout Standard
The result of fitting using (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:alpha-fast"

\end_inset

) was 
\begin_inset Formula $c_{1}=$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Sexpr{round(cffn,4)}
\end_layout

\end_inset

, but for whole-project averages like this the slope often is too small
 because low-angle-of-attack fluctuations dominate and bias the results.
 Isolated speed runs and pitch maneuvers provide a check; when this is done
 for OTREC the result is 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Sexpr{round(coef(ffsr)[1], 4)}
\end_layout

\end_inset

, not significantly different, but that result was then used in the iteration.
 For comparison, the result obtained for DEEPWAVE was 21.481, and this was
 supported by subsequent LAMS measurements.
\end_layout

\begin_layout Standard
For the low-pass component, the coefficients from the fit to (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:alpha-slow"

\end_inset

) after iteration were {
\begin_inset Formula $d$
\end_inset

} = {
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Sexpr{round(cfs[1], 4)}
\end_layout

\end_inset

, 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Sexpr{round(cfs[2], 4)}
\end_layout

\end_inset

, 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Sexpr{round(cfs[3], 6)}
\end_layout

\end_inset

, 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Sexpr{round(cfs[4], 8)}
\end_layout

\end_inset

}, and the residual standard deviation for the combined fit (slow + fast
 components) was 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Sexpr{round(RMS, 3)}
\end_layout

\end_inset


\begin_inset Formula $^{\circ}$
\end_inset

.
 This is small, reduced significantly from the original-fit values, which
 confirms consistency between the iterated results for angle-of-attack and
 updraft.
 These coefficients were then used to calculate the revised angle of attack
 (AKY) and revised vertical wind (WIY).
 For 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Sexpr{Project}
\end_layout

\end_inset

, the resulting mean values of the vertical wind, restricted to measurements
 where TASX > 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Sexpr{TASlimit}
\end_layout

\end_inset

 and abs(ROLL) < 2 and with intervals flagged earlier excluded, are shown
 in the following list.
 Mean values are very good for all flights, but the standard deviations
 indicate that the changes are significant and that the result is an improved
 representation of the vertical-wind measurements.
\end_layout

\begin_layout Standard
The time-in-air dependence is larger than that found for SOCRATES, and it
 is worrisome that the test flights were not maximum-duration flights so
 this term might need revision once research and/or ferry flights are available.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<meanValues, include=TRUE, highlight=FALSE>>=
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

DF <- Data[!is.na(D$WIC) & (D$TASX > TASlimit) & (abs(D$ROLL) < 2) &
\end_layout

\begin_layout Plain Layout

           (abs(D$GGVSPD) < 5), ]
\end_layout

\begin_layout Plain Layout

for (f in unique (Data$RF)) {
\end_layout

\begin_layout Plain Layout

  print (sprintf ('mean WIY for flight %d is %.2f; WIC was %.2f', f,
\end_layout

\begin_layout Plain Layout

                 mean(DF[DF$RF == f, 'WIY'], na.rm=TRUE),
\end_layout

\begin_layout Plain Layout

                 mean(DF[DF$RF == f, 'WIC'], na.rm=TRUE)))
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

# for (f in unique (Data$RF)) {
\end_layout

\begin_layout Plain Layout

#   md <- mean(DF[DF$RF == f, 'WIY'] - DF[DF$RF == f, 'WIC'], na.rm=TRUE)
\end_layout

\begin_layout Plain Layout

#   sdd <- sd(DF[DF$RF == f, 'WIY'] - DF[DF$RF == f, 'WIC'], na.rm=TRUE)
\end_layout

\begin_layout Plain Layout

#   print (sprintf ('mean WIY-WIC for flight %d is %.2f +/- %.2f', f, md,
 sdd))
\end_layout

\begin_layout Plain Layout

# }
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Bad measurements (e.g., where ADIFR and/or QCF are affected by blockage or
 other problems) can affect the results, but using this procedure such problems
 should be identifiable by considering if the measured WIY differs from
 that expected from AOAREF outside prescribed limits.
 A section is included in the code, but it was inhibited when the document
 was produced although it was checked to ensure that there were no obvious
 outliers that might bias the fit.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<bad, include=TRUE, eval = FALSE, highlight=FALSE, fig.cap='Search for bad
 measurements.
 AKD is the difference AKY - AOAREF.'>>=
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

Data$AKD <- Data$AKY - Data$AOAREF
\end_layout

\begin_layout Plain Layout

r <- is.na(D$WIC) | (D$TASX < TASlimit) | (abs(D$ROLL) > 2) |   
\end_layout

\begin_layout Plain Layout

        (abs(D$GGVSPD) > 5)
\end_layout

\begin_layout Plain Layout

Data <- blankNA(Data, is.na(DF$WIC), 'AKD')
\end_layout

\begin_layout Plain Layout

Data <- blankNA(Data, r, 'AKD')
\end_layout

\begin_layout Plain Layout

for (f in unique(Data$RF)) {
\end_layout

\begin_layout Plain Layout

  Data %>% dplyr::filter(RF == f) %>% 
\end_layout

\begin_layout Plain Layout

         select(Time, AKD) %>% 
\end_layout

\begin_layout Plain Layout

         plotWAC(ylab='AKY-AOAREF [deg]')
\end_layout

\begin_layout Plain Layout

  abline(h=0, lty=2, col='red')
\end_layout

\begin_layout Plain Layout

  title(sprintf('flight %d', f))
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Summary: Processing Recommendations
\end_layout

\begin_layout Standard
Use the complementary-filter representation of AKRD as developed previously.
 If feasible, the best representation of the measurements uses an added
 variable called 
\begin_inset Quotes eld
\end_inset

TIA
\begin_inset Quotes erd
\end_inset

 here (
\begin_inset Quotes eld
\end_inset

Time In Air
\begin_inset Quotes erd
\end_inset

) and is the number of seconds after the first WOW_A == 0 measurement.
 The equations are:
\begin_inset Newline newline
\end_inset


\begin_inset Formula 
\begin{equation}
\alpha_{f}=\left(\frac{\mathrm{\{ADIFR\}}}{\mathrm{\{QCF\}}}\right)_{f}c_{1}\label{eq:alpha-fast-1}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
\alpha_{s}=d_{0}+d_{1}\left(\frac{\mathrm{\{ADIFR\}}}{\mathrm{\{QCF\}}}\right)_{s}+d_{2}\mathrm{\{QCF\}}_{s}+d_{3}\{\mathrm{TIA}\}\label{eq:alpha-slow-1}
\end{equation}

\end_inset

with coefficients 
\begin_inset Formula $c_{1}=$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Sexpr{round(coef(ffsr)[1], 4)}
\end_layout

\end_inset

 and {
\begin_inset Formula $d$
\end_inset

} = {
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Sexpr{round(cfs[1], 4)}
\end_layout

\end_inset

, 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Sexpr{round(cfs[2], 4)}
\end_layout

\end_inset

, 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Sexpr{round(cfs[3], 6)}
\end_layout

\end_inset

, 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Sexpr{round(cfs[4], 8)}
\end_layout

\end_inset

}.
 An alternate representation, if TIA is not feasible or convenient to include,
 is {
\begin_inset Formula $d$
\end_inset

} = {
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Sexpr{round(cfsn[1], 4)}
\end_layout

\end_inset

, 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Sexpr{round(cfsn[2], 4)}
\end_layout

\end_inset

, 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Sexpr{round(cfsn[3], 6)}
\end_layout

\end_inset

, 
\begin_inset Formula $0$
\end_inset

}, the best fit without TIA.
\end_layout

\begin_layout Standard
\align center

\family sans
\color blue
– End of Memo –
\end_layout

\begin_layout Standard
\begin_inset Newpage clearpage
\end_inset


\end_layout

\begin_layout Standard
Reproducibility:
\begin_inset Note Note
status open

\begin_layout Plain Layout
include enough info to re-run.
 in zip, include program, pdf if not too big, and subset data, not entire
 file.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0pt">
<column alignment="left" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family sans
\shape smallcaps
\color blue
Project:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Sexpr{thisFileName}
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family sans
\shape smallcaps
\color blue
Archive package:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Sexpr{thisFileName}.zip
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family sans
\shape smallcaps
\color blue
Contains:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
attachment list below
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family sans
\shape smallcaps
\color blue
Program:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Sexpr{thisFileName}.Rnw
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family sans
\shape smallcaps
\color blue
Original Data:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

/scr/raf
\backslash
_data/
\backslash
Sexpr{Project}/{tf01--tf03}.nc
\end_layout

\end_inset

 on 31 Jul 2019
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family sans
\shape smallcaps
\color blue
Workflow:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Workflow
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Sexpr{thisFileName}.pdf
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family sans
\shape smallcaps
\color blue
Git:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

https://github.com/WilliamCooper/Reprocessing/
\backslash
Sexpr{thisFileName}
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
attachm{
\backslash
Sexpr{thisFileName}.Rnw
\backslash

\backslash

\backslash
Sexpr{thisFileName}.pdf
\backslash

\backslash
Workflow
\backslash
Sexpr{thisFileName}.pdf
\backslash

\backslash

\backslash
Sexpr{SaveRData}
\backslash

\backslash
SessionInfo}
\end_layout

\begin_layout Plain Layout

%
\backslash
cc{first attachment
\backslash

\backslash
second
\backslash

\backslash
3rd att}
\end_layout

\begin_layout Plain Layout

%
\backslash
attach{attachment}
\end_layout

\begin_layout Plain Layout

%
\backslash
attachm{first
\backslash

\backslash
second} %
\backslash
cc{first attachment
\backslash

\backslash
second
\backslash

\backslash
3rd att}
\end_layout

\begin_layout Plain Layout

<<save-system-info, echo=FALSE>>= 
\end_layout

\begin_layout Plain Layout

cat (toLatex(sessionInfo()), file="SessionInfo")
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

@ 
\end_layout

\begin_layout Plain Layout

<<make-zip-archive, echo=TRUE, INCLUDE=TRUE>>=
\end_layout

\begin_layout Plain Layout

system (sprintf("zip %s.zip %s.Rnw %s.pdf Workflow%s.pdf SessionInfo %s", thisFileNa
me, thisFileName, thisFileName, thisFileName, SaveRData))
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

@ 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

% 
\backslash
attach{attachment}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

% 
\backslash
attachm{ProgramFile
\backslash

\backslash
Document.pdf
\backslash

\backslash
SaveRData}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%
\backslash
cc{first attachment
\backslash

\backslash
second
\backslash

\backslash
3rd att}
\end_layout

\end_inset


\end_layout

\end_body
\end_document
