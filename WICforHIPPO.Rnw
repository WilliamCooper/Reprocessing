%% LyX 2.1.4 created this file.  For more info, see http://www.lyx.org/.
%% Do not edit unless you really know what you are doing.
\documentclass[12pt]{article}
\usepackage{mathptmx}
\usepackage[T1]{fontenc}
\usepackage[letterpaper]{geometry}
\geometry{verbose,tmargin=3.54cm,bmargin=2.54cm,lmargin=2.54cm,rmargin=2.54cm,headheight=1cm,headsep=2cm,footskip=0.5cm}
\usepackage{fancyhdr}
\pagestyle{fancy}
\setcounter{secnumdepth}{2}
\setcounter{tocdepth}{2}
\setlength{\parskip}{\medskipamount}
\setlength{\parindent}{0pt}
\usepackage{color}

\makeatletter

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% LyX specific LaTeX commands.
%% Because html converters don't know tabularnewline
\providecommand{\tabularnewline}{\\}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% User specified LaTeX commands.
\input colordvi
\usepackage{color}
\fancyhead{}
\fancyfoot[CE,CO]{}
\newtoks{\addressee} \global\addressee={}
\newdimen\longindent \longindent=3.5truein
\fancyhead[L]{Memo to: \the\addressee \\ \datetoday \\ Page \thepage \hfill}
\renewcommand{\headrulewidth}{0.0pt}
\newenvironment{lyxlist}[1]
{\begin{list}{}
{\settowidth{\labelwidth}{#1}
\setlength{\leftmargin}{\labelwidth}
\addtolength{\leftmargin}{\labelsep}
\renewcommand{\makelabel}[1]{##1\hfil}}}
{\end{list}}
\newcommand{\datetoday}{\number\day\space
     \ifcase\month\or January\or February\or March\or April\or May\or
     June\or July\or August\or September\or October\or November\or
     December\fi
     \space\number\year}
\newcommand{\EOLmemo}{\null \vskip-1.5truein
{\raggedright \textsf{\textsc{\large \textcolor{blue}{Earth Observing Laboratory}}}}\par
{\raggedright \textsf{\textsl{\textcolor{blue}{Memorandum:}}}} \par \vskip6pt
{\color{blue}{\hrule}}\par
\vskip0.3truein \leftline{\hskip \longindent \datetoday} \vskip0.2truein
\thispagestyle{empty}}
\newcommand{\attachm}[1]{\begin{lyxlist}{Attachments:00}
\item [Attachments:] {#1}
\end{lyxlist}}
\newcommand{\cc}[1]{\begin{lyxlist}{Attachments:00}
\item [cc:] {#1}
\end{lyxlist}}
\newcommand{\attach}[1]{\begin{lyxlist}{Attachments:00}
\item [Attachment:] {#1}
\end{lyxlist}}
%usage: \encl{A\\B\\C} or \cc{ma,e1\\name2\\name3}

\makeatother

\begin{document}
\EOLmemo 

\global\addressee={Reprocessing File}  % >>change "File" to the "To:" name desired

\begin{tabular}{ll}
\textsf{\textsc{\textcolor{blue}{To:}}} & \the\addressee\tabularnewline
\textsf{\textsc{\textcolor{blue}{From:}}} & Al Cooper and Jorgen Jensen\tabularnewline
\textsf{\textsc{\textcolor{blue}{Subject:}}} & Vertical wind for HIPPO flights, circuits 2--5\tabularnewline
\end{tabular}

\bigskip

<<initialization,echo=FALSE,include=FALSE>>=

require(knitr)
opts_chunk$set(echo=FALSE, include=FALSE, fig.lp="fig:")
opts_chunk$set(fig.width=6, fig.height=5, fig.pos="center", digits=4)
options(digits=3)
thisFileName <- "WICforHIPPO"
require(Ranadu, quietly = TRUE, warn.conflicts=FALSE)
require(ggplot2)
require(grid)
library(knitr)
require(ggthemes)
Directory <- DataDirectory ()
Flight <- "rf08" 				# XXX change this
Project = "HIPPO-2"			 # XXX change this
fname = sprintf("%sHIPPO/%s%s.nc", Directory,Project,Flight)
VarList <- c("ADIFR", "VSPD", "VSPD_G", "PITCH", "PITCH_IRS2", "QCF", "PSF", "AKRD", "WIC", "TASF", "GGALT", "ROLL", "PSXC", "ATX")
## add variables needed to recalculate wind
VarList <- c(VarList, "TASX", "ATTACK", "SSLIP", "GGVEW", "GGVNS", "VEW", "VNS", "THDG")
## add variables needed for pitch correction:
VarList <- c(VarList, "LAT")
# Data <- getNetCDF (fname, VarList) 
SaveRData <- sprintf("%s.Rdata.gz", thisFileName)
hline <- function(y, col='black', lwd=1, lty=2) {
  ## note: 'Data' is a 'free variable' and needs to exist in the calling environment 
  # SE <- getStartEnd(Data$Time)
  # lines (c(Data$Time[getIndex(Data$Time, SE[1])], 
  #          Data$Time[getIndex (Data$Time, SE[2])]), 
  #        c(y, y), col=col, lty=2, lwd=lwd)
  abline(h=y, col = col, lwd = lwd, lty = lty)
}

formatTime <- function (time) {
  t <- as.POSIXlt (time)
  tt <- sprintf ("%d:%02d:%02d", t$hour, t$min, t$sec)
  return (tt)
}

SmoothInterp <- function (x) {
  ## skip if there are fewer than 100 measurements
  if (length (x[!is.na(x)]) < 100) {return (x)}
  d <- zoo::na.approx (as.vector(x), maxgap=100, na.rm = FALSE)
  d[is.na(d)] <- 0
  return (signal::filter(signal::sgolay(3, 61), d))
}

@


\section{General comments}

The measurements of vertical wind from HIPPO flights appear to need
different sensitivity coefficients for HIPPO-2/3 vs HIPPO-4/5, and
the reason for that is not evident. Projects HIPPO-2 and HIPPO-3 are
consistent and could use the same coefficients without serious error,
but projects HIPPO-4 and HIPPO-5 each need significantly different
coefficients and, even with those changes, the results for vertical
wind appear to produce significant errors that can't be removed by
AKRD calibration. Prior to January 2012, when the radome was changed,
the ``standard'' coefficients expected to apply to the radome, determined
from the PREDICT project, which was in August 2010 and so between
HIPPO-3 and HIPPO-4, are listed in the following table. The suggested
coefficients are also listed, and it is clear that the standard coefficients
do not apply well to any of the HIPPO circuits (all flown before the
2012 radome change). There is significant difference also vs.~the
DC3-TEST project, flown just before the last two HIPPO circuits. There
was some evident change between HIPPO-3 and HIPPO-4 (between April
2010 and June 2011), and the results from PREDICT are still different.
Furthermore, the resulting vertical wind in HIPPO-2 and HIPPO-3 looks
satisfactory, while there are evident problems in HIPPO-4 and HIPPO-5
that do not appear to be correctable by calibration coefficients,
as discussed in the next section.

There were apparently no speed runs in the test or research flights
leading to HIPPO-4 and HIPPO-5, but there were several in flights
1, 2, and 4 of DC3-TEST. Therefore there may be some argument for
using these coefficients in preference to those determined from HIPPO-4/5,
in case some frequent radome problems affect the results from those
projects. This will be discussed further in the ``Suggested processing''
section below.

\noindent \begin{center}
\begin{tabular}{|c|c|c|c|c|}
\hline 
\textbf{Project} & \textbf{Dates} & \textbf{$c_{1}$} & \textbf{$c_{2}$} & \textbf{$c_{3}$}\tabularnewline
\hline 
\hline 
``standard'' & before 2012 & 5.516 & 19.07 & 2.08\tabularnewline
\hline 
HIPPO-2 & Nov. 2009 & 5.151 & 15.651 & 7.303\tabularnewline
\hline 
HIPPO-3 & Mar/Apr 2010 & 5.112 & 14.016 & 8.291\tabularnewline
\hline 
HIPPO-4 & Jun/Jul 2011 & 4.876 & 9.882 & 12.275\tabularnewline
\hline 
HIPPO-5 & Aug/Sept 2011 & 4.832 & 9.506 & 12.669\tabularnewline
\hline 
DC3-TEST & May 2011 & 5.389 & 20.172 & 0\tabularnewline
\hline 
\end{tabular}
\par\end{center}


\section{Illustration and study of the HIPPO-4/HIPPO-5 problem}

Flight 3 of HIPPO-5 illustrates the problem that is present in vertical-wind
measurements from HIPPO-4 and HIPPO-5. If the coefficients listed
in the above table, determined from the full-project measurements
combining all flights, are used the result is the vertical wind shown
in Fig.~\ref{fig:h5rf03}. If fit coefficients are determine from
only this flight, to avoid the possibility that other flights might
have different radome characteristics and so distort the results,
the coefficient are \{4.76, 7.80, 15.00\}. The resulting fit has only
minor improvement in the residual standard deviation (0.182 vs 0.188)
in comparison to using the full-project coefficients as listed in
the above table. It does not appear to improve the vertical wind,
however; it lowers the central portion where there appears to be too-high
vertical wind, but it accomplishes this by lowering the level portions
near the start and end of the flight. Examination of the components
entering the vertical wind shows that everything appears normal except
ADIFR, which has enough offset in the central portion of the plot
to account for the excess vertical wind.

<<h5rf03, include=TRUE, fig.cap="Vertical wind measurements WIC for HIPPO-5 flight 3.">>=

SaveRData <- "WI-HIPPO5.Rdata"
load(SaveRData)
Flights <- c("rf01", "rf02", "rf03", "rf04", "rf05", "rf06", "rf07", "rf08", "rf09", "rf10", "rf11", "rf12", "rf13")
ProjectDir <- "HIPPO"
Project <- "HIPPO-5"
ReloadData <- FALSE
# ReloadData <- TRUE
Data <- data.frame()
if (ReloadData) {
  for (flt in Flights) {
    fname = sprintf("%s%s/%s%s.nc", DataDirectory(),ProjectDir,Project,flt)
    fno <- 30
    if (grepl("rf", flt)) {
      fno <- as.integer (sub("rf", "", flt))
    }
    if (grepl ("tf02", flt)) {fno <- -2}
    if (grepl ("ff01", flt)) {fno <- -1}
    D <- getNetCDF (fname, VarList, F=fno)
    .ggalt <- zoo::na.approx (as.vector(D$GGALT), maxgap=2000, na.rm = FALSE)
    # try 7-pt derivative, 3rd order:
    D$GGVS <- signal::sgolayfilt (.ggalt, 3, 7, m=1)  # m=1 for first deriv.
    # if (fno == 1) {D <- D[setRange (D$Time, 174000, 221000), ]}
    # if (fno == 2) {D <- D[setRange (D$Time, 151000, 210000), ]}
    if (fno == 1) {D <- D[setRange (D$Time, 0, 190000), ]}
    # D$PITCH <- D$PITCH - CorrectPitch(D)
    Data <- rbind (Data, D)
  }
  save(Data, file=SaveRData)
} else {
  load(SaveRData)
}
Data$VSPD_G <- (Data$VSPD_G + 0.06)/1.02  ## removes erroneous cal coefficients ) Data$AOAREF <- (Data$PITCH - (Data$VSPD_G / Data$TASF) * (180 / pi))  
Data$M <- MachNumber (Data$PSF, Data$QCF)
Data$QR <- Data$ADIFR / Data$QCF
# Data$PITCH <- Data$PITCH - CorrectPitch(Data)
Data$AOAREF <- (Data$PITCH - (Data$VSPD_G / Data$TASF) * (180 / pi)) 
# Data$AOAREF <- (Data$PITCH - (Data$GGVS / Data$TASF) * (180 / pi))

D2 <- Data[Data$RF == 2, ]
D2 <- D2[!is.na(D2$Time), ]
SkipRange <- setRange(D2$Time, 210000, 0)
j1 <- which(D2$Time[SkipRange[1]] == Data$Time)
j2 <- which(D2$Time[SkipRange[length(SkipRange)]] == Data$Time)
Data[j1:j2, ] <- NA

DataV <- Data[Data$TASF > 130, ]
DataV <- DataV[abs(DataV$ROLL) < 4, ]
DataV <- DataV[abs(DataV$VSPD_G) < 1, ]
f <- lm (AOAREF~QR+I(QR*M), data=DataV)
cf <- coef(f)       
## new angle-of-attack 
Data$AK <- cf[1] + Data$QR * (cf[2] + cf[3] * Data$M)
Data$AK2 <- 5.389 + 20.172 * Data$QR
Data$WIX <- Data$WIC + (Data$AK-Data$AKRD)*pi*Data$TASF/180. + (Data$VSPD_G-Data$VSPD) 
Data$WIX2 <- Data$WIC + (Data$AK2-Data$AKRD)*pi*Data$TASF/180. + (Data$VSPD_G-Data$VSPD) 
Data$WIXS <- SmoothInterp (Data$WIX)
Data$WIX2S <- SmoothInterp (Data$WIX2)
d <- zoo::na.approx (as.vector(Data$WIX), maxgap=100, na.rm = FALSE)
d[is.na(d)] <- 0
# Data$WIXF1 <- Data$WIX - signal::filter( signal::butter (3, 1/600), d)
Data$WIXF <- Data$WIX - signal::filtfilt( signal::butter (3, 1/600), d)
# Data$WIXF <- Data$WIX - signal::filter(signal::sgolay(3,601), d)
Data$WIXFS <- SmoothInterp (Data$WIXF)
# Data$WIXF1S <- SmoothInterp (Data$WIXF1)
D3 <- Data[Data$RF == 3, ] 
V <- c("Time", "WIXS")
plotWAC(D3[, V], col=c('blue', 'darkgreen', 'red', 'cyan'), lwd=c(1,2,3,2),legend.position='topright')
hline(0, col='darkorange', lty=2)
title(sprintf("Flight 3 mean WIX: %.2f m/s", mean (D3$WIX, na.rm=TRUE)))

<<h5rf04, include=TRUE, fig.cap="As in the preceding figure but for HIPPO-5 flight 4.">>=

D4 <- Data[Data$RF == 4, ] 
V <- c("Time", "WIXS")
plotWAC(D4[, V], col=c('blue', 'darkgreen', 'red', 'cyan'), lwd=c(1,2,3,2),legend.position='topright')
hline(0, col='darkorange', lty=2)
title(sprintf("Flight 4 mean WIX: %.2f m/s", mean (D4$WIX, na.rm=TRUE)))

@

Figure \ref{fig:h5rf04} shows that a similar but even more problematic
deviation occurs for Flight 4. Because these features occur throughout
HIPPO-5, and have both signs, it seems implausible that they are real.
More likely is that the radome suffers from some problem, like some
accumulation of dirt or a bug near the ports or a partial obstruction
in the lines or a leak. To check for this, the measurements of ADIFR
were considered as functions of altitude or Mach number to see if
there is a normal pattern for level flight and if there is unusual
variance in HIPPO-5. Figure \ref{fig:adifr-study}, comparing the
measurements of ADIFR from flight 4 to those from all other HIPPO-5
flights except 1, 3, and 4, shows that flight-4 measurements are clear
outliers. Of course, this would be the case if the vertical wind is
really low as shown in Fig.~\ref{fig:h5rf04}, but that seems unlikely
over such an extended distance. It seems more likely that there was
some problem affecting the radome on this flight and perhaps also
others in HIPPO-4 and HIPPO-5.

<<adifr-study, include=TRUE, fig.cap="Distribution in ADIFR in altitude bins, for all measurements in HIPPO-5 except those in flights 1, 3, and 4 (green), and for those from flight 4 (blue).">>=

flt <- 4
DX <- binStats(Data[Data$RF != flt & Data$RF != 1 & Data$RF != 3 & Data$RF != 4, c("ADIFR", "GGALT")], bins=14, xlow=0, xhigh=14000)
DX4 <- binStats(Data[Data$RF == flt, c("ADIFR", "GGALT")], bins=14, xlow=0, xhigh=14000)
clr <- c("average", "WIX")
col <- c ('blue', 'red')
p <- ggplot(DX, aes(x=xc))
p <- p + geom_errorbar(aes(ymin=ybar-sigma, ymax=ybar+sigma, colour='excl. 1,3,4'))
p <- p + geom_errorbar(data=DX4, aes(ymin=ybar-sigma, ymax=ybar+sigma, colour='rf04'))

# p <- p + scale_x_continuous (breaks=c(0,90,180,270,360))
p <- p + geom_point (aes(y = ybar, colour=clr[1], shape=clr[1]), size=2.5)
p <- p + geom_line (aes(y=ybar), colour='blue')
p <- p + xlab("altitude [m]") + ylab("ADIFR [hPa]")
# p <- p + scale_colour_manual("ADIFR:", labels = clr, values = col)
# p <- p + scale_shape_manual ("v wind:", labels = clr, values = c(19,19))
p <- p + theme_WAC() + theme (legend.background=element_rect(colour='black', size=0.3, fill="ivory"))
print (p)

@


\section{Suggested processing}

The DC3-TEST coefficients were tested in HIPPO-5, but the results appeared
to be much worse than those with the tabulated coefficients for HIPPO-5, so
it appears best to keep those coefficients even though there is suspicion
that something about the radome-based measurements is problematic in HIPPO-5.
The suggested solution, to obtain reasonable-looking vertical wind for HIPPO-4
and HIPPO-5, is to high-pass filter the vertical wind and then provide three
variables: WIC (which would be what is called WIX in this memo); WIF 
(filtered WIC), and WIX, the recommended value of vertical wind. For HIPPO-4
and HIPPO-5, WIX would be WIF; for HIPPO-2 and HIPPO-3, WIX would be WIC without
filtering. That would be consistent with 'X' used to identify other best choices
among redundant measurements.

The filter should have a long time constant to avoid affecting real 
long-wavelength waves. The suggested choice is 600~s, which for airspeed
above 180~m/s would correspond to a wavelength longer than 100~km. Furthermore,
the filter should be applied forward and backward or otherwise designed to be
centered to avoid the phase shift that would occur otherwise. This will
necessitate second-pass processing to provide the filtered variable.

\section{Resulting vertical wind}

<<filtered-result, include=TRUE, fig.cap="Example of the effect of a 600-s high-pass filter (WIXF) applied to the vertical wind measurement (WIX), from HIPPO-5 flight 3, 18:00:00--18:30:00.">>=

ff <- lm(AOAREF ~ QR, data=DataV)
#summary(ff)
cff <- coef(ff)
# Data$AKF <- cff[1] + cff[2] * Data$QR
# plot(Data$AOAREF, Data$AKF, type='p', pch=20, col='blue')

DataF <- DataV[DataV$RF == 7 | DataV$RF == 8 | DataV$RF > 10, ]
                                                           
ff <- lm(AOAREF ~ QR+I(QR*M), data=DataF)
# summary(ff)
# cff <- coef(ff)
# DataV$AKF <- cff[1] + DataV$QR * (cff[2] + cff[3] * DataV$M)
# plot(DataV$AOAREF, DataV$AKF, type='p', pch=20, col='blue')
# lines(c(1,6), c(1,6), col='darkorange', lwd=2, lty=2)
# for (i in 1:13) {
  # print (sprintf("flight %d rms=%.2f", i, sd(DataV[DataV$RF == i,"AOAREF"]-DataV[DataV$RF == i, "AKF"], na.rm=TRUE)))
# }
# plot(DataV$AOAREF, DataV$QR, type='p', pch=20, col='blue')

# cf[1] <- 5.389
# cf[2] <- 20.172
# Data$AK <- cf[1] + Data$QR * (cf[2])
# Data$WIX <- Data$WIC + (Data$AK-Data$AKRD)*pi*Data$TASF/180. + (Data$VSPD_G-Data$VSPD)
# Data$WIXS <- SmoothInterp (Data$WIX)
D3 <- Data[Data$RF == 3, ]
D3 <- D3[!is.na(D3$Time), ]
r <- setRange(D3$Time, 180000, 183000)
D3$Wshifted <- D3$WIX-mean(D3$WIX[r]-D3$WIXF[r])
V <- c("Time", "WIXF", "WIX", "Wshifted")
plotWAC(D3[r, V], legend.position='topright')
title("HIPPO-5 flight 3; red line: WIX - mean (WIX-WIXF)")

@

An example of the result of applying this approach, with 600-s high-pass
filtering, is shown in Fig.~\ref{fig:filtered-result}. The high-frequency
structure is mostly preserved well while the significant offset is
removed. For reference, the full-flight plots of the unfiltered and
filtered wind that results from this approach are appended, for both
HIPPO-4 and HIPPO-5. See the sequence of figures starting with Fig.~\ref{fig:all-flight-results1}.

\clearpage

\begin{center}
\textsf{\textcolor{blue}{-- End of Memo --}}
\par\end{center}

Reproducibility:

\begin{tabular}{ll}
\textsf{\textsc{\textcolor{blue}{Project:}}} & \Sexpr{thisFileName}\tabularnewline
\textsf{\textsc{\textcolor{blue}{Archive package:}}} & \Sexpr{thisFileName}.zip\tabularnewline
\textsf{\textsc{\textcolor{blue}{Contains:}}} & attachment list below\tabularnewline
\textsf{\textsc{\textcolor{blue}{Program:}}} & \Sexpr{thisFileName}.Rnw\tabularnewline
\textsf{\textsc{\textcolor{blue}{Original Data:}}} & /scr/raf\_data/HIPPO/\Sexpr{Project}/\Sexpr{Flight}.nc, etc. Aug 19) \tabularnewline
\textsf{\textsc{\textcolor{blue}{Git:}}} & git@github.com:WilliamCooper/\Sexpr{thisFileName}.git\tabularnewline
\end{tabular}

\attachm{\Sexpr{thisFileName}.Rnw\\\Sexpr{thisFileName}.pdf\\SessionInfo}
%\cc{first attachment\\second\\3rd att}
%\attach{attachment}
%\attachm{first\\second} %\cc{first attachment\\second\\3rd att}
<<save-system-info, echo=FALSE>>= 
cat (toLatex(sessionInfo()), file="SessionInfo")

@ 
<<make-zip-archive, echo=TRUE, INCLUDE=TRUE>>=
system (sprintf("zip %s.zip %s.Rnw %s.pdf SessionInfo", thisFileName, thisFileName, thisFileName))

@ 

%\cc{first attachment\\second\\3rd att}

<<all-flight-results, include=TRUE, fig.cap="Result for unfiltered and filtered vertical wind for HIPPO-5 flights. All plots have 60-s smoothing to reduce noise in these full-flight plots.">>=

V <- c("Time", "WIXFS", "WIXS", "VS")
Data$VS <- Data$VSPD_G/10
V <- c("Time", "WIXFS", "WIXS")
for (i in 1:13) {
  plotWAC(Data[Data$RF == i, V])
  title (sprintf ("HIPPO-5 flight %d mean unfiltered %.2f filtered %.2f", 
                  i, mean(Data$WIX[Data$RF == i], na.rm=TRUE),
                  mean(Data$WIXF[Data$RF == i], na.rm=TRUE)))
}

@
\clearpage

<<more-flight-results, include=TRUE, fig.cap="Result for unfiltered and filtered vertical wind for HIPPO-4 flights. All plots have 60-s smoothing to reduce noise in these full-flight plots.">>=
Flights <- c("rf01", "rf02", "rf03", "rf04", "rf05", "rf06", "rf07", "rf08", "rf09", "rf10", "rf11", "rf12")
Data <- data.frame()
SaveRData <- "WI-HIPPO4.Rdata"
Project <- "HIPPO-4"
if (ReloadData) {
  for (flt in Flights) {
    fname = sprintf("%s%s/%s%s.nc", DataDirectory(),ProjectDir,Project,flt)
    fno <- 30
    if (grepl("rf", flt)) {
      fno <- as.integer (sub("rf", "", flt))
    }
    if (grepl ("tf02", flt)) {fno <- -2}
    if (grepl ("ff01", flt)) {fno <- -1}
    D <- getNetCDF (fname, VarList, F=fno)
    .ggalt <- zoo::na.approx (as.vector(D$GGALT), maxgap=2000, na.rm = FALSE)
    # try 7-pt derivative, 3rd order:
    D$GGVS <- signal::sgolayfilt (.ggalt, 3, 7, m=1)  # m=1 for first deriv.
    # if (fno == 1) {D <- D[setRange (D$Time, 174000, 221000), ]}
    # if (fno == 2) {D <- D[setRange (D$Time, 151000, 210000), ]}
    if (fno == 1) {D <- D[setRange (D$Time, 0, 190000), ]}
    # D$PITCH <- D$PITCH - CorrectPitch(D)
    Data <- rbind (Data, D)
  }
  save(Data, file=SaveRData)
} else {
  load(SaveRData)
}
Data$QR <- Data$ADIFR / Data$QCF
Data$M <- MachNumber (Data$PSF, Data$QCF)
cf <- c(4.876, 9.882, 12.275)
Data$AK <- cf[1] + Data$QR * (cf[2] + cf[3] * Data$M)
Data$WIX <- Data$WIC + (Data$AK-Data$AKRD)*pi*Data$TASF/180. + (Data$VSPD_G-Data$VSPD) 
Data$WIXS <- SmoothInterp (Data$WIX)
bf <- signal::butter (3, 1/600)
d <- zoo::na.approx (as.vector(Data$WIX), maxgap=100, na.rm = FALSE)
d[is.na(d)] <- 0
Data$WIXF <- Data$WIX - signal::filtfilt( signal::butter (3, 1/600), d)
Data$WIXFS <- SmoothInterp (Data$WIXF)
V <- c("Time", "WIXFS", "WIXS", "VS")
Data$VS <- Data$VSPD_G/10
V <- c("Time", "WIXFS", "WIXS")
for (i in 1:12) {
  plotWAC(Data[Data$RF == i, V])
    title (sprintf ("HIPPO-4 flight %d mean unfiltered %.2f filtered %.2f", 
                  i, mean(Data$WIX[Data$RF == i], na.rm=TRUE),
                  mean(Data$WIXF[Data$RF == i], na.rm=TRUE)))
}

@
\end{document}
